diff --git a/cmake/Modules/FindJson.cmake b/cmake/Modules/FindJson.cmake
index a9178a2..f4dae8e 100644
--- a/cmake/Modules/FindJson.cmake
+++ b/cmake/Modules/FindJson.cmake
@@ -1,18 +1,16 @@
 # Look for json, use our own if not found
 
-#FIND_PATH(JSON_INCLUDE_DIR json.h)
+FIND_PATH(JSON_INCLUDE_DIR json/json.h PATHS /usr/include/jsoncpp)
 
-#FIND_LIBRARY(JSON_LIBRARY NAMES jsoncpp)
+FIND_LIBRARY(JSON_LIBRARY NAMES jsoncpp)
 
-#IF(JSON_LIBRARY AND JSON_INCLUDE_DIR)
-#	SET( JSON_FOUND TRUE )
-#ENDIF(JSON_LIBRARY AND JSON_INCLUDE_DIR)
+IF(JSON_LIBRARY AND JSON_INCLUDE_DIR)
+	SET( JSON_FOUND TRUE )
+ENDIF(JSON_LIBRARY AND JSON_INCLUDE_DIR)
 
-#IF(JSON_FOUND)
-#	MESSAGE(STATUS "Found system jsoncpp header file in ${JSON_INCLUDE_DIR}")
-#	MESSAGE(STATUS "Found system jsoncpp library ${JSON_LIBRARY}")
-#ELSE(JSON_FOUND)
-	SET(JSON_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/json)
-	SET(JSON_LIBRARY jsoncpp)
-	MESSAGE(STATUS "Using project jsoncpp library")
-#ENDIF(JSON_FOUND)
+IF(JSON_FOUND)
+	MESSAGE(STATUS "Found system jsoncpp header file in ${JSON_INCLUDE_DIR}")
+	MESSAGE(STATUS "Found system jsoncpp library ${JSON_LIBRARY}")
+ELSE()
+	MESSAGE(FATAL_ERROR "JSON library not found")
+ENDIF()
diff --git a/cmake/Modules/FindJthread.cmake b/cmake/Modules/FindJthread.cmake
index 302a3c2..9bed299 100644
--- a/cmake/Modules/FindJthread.cmake
+++ b/cmake/Modules/FindJthread.cmake
@@ -1,6 +1,6 @@
 # Look for jthread, use our own if not found
 
-FIND_PATH(JTHREAD_INCLUDE_DIR jthread.h)
+FIND_PATH(JTHREAD_INCLUDE_DIR jthread.h PATHS /usr/include/jthread)
 
 FIND_LIBRARY(JTHREAD_LIBRARY NAMES jthread)
 
@@ -12,7 +12,5 @@ IF(JTHREAD_FOUND)
 	MESSAGE(STATUS "Found system jthread header file in ${JTHREAD_INCLUDE_DIR}")
 	MESSAGE(STATUS "Found system jthread library ${JTHREAD_LIBRARY}")
 ELSE(JTHREAD_FOUND)
-	SET(JTHREAD_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/jthread)
-	SET(JTHREAD_LIBRARY jthread)
-	MESSAGE(STATUS "Using project jthread library")
+	MESSAGE(FATAL_ERROR "jthread library not found")
 ENDIF(JTHREAD_FOUND)
diff --git a/cmake/Modules/FindSqlite3.cmake b/cmake/Modules/FindSqlite3.cmake
index ecce6e3..89f208b 100644
--- a/cmake/Modules/FindSqlite3.cmake
+++ b/cmake/Modules/FindSqlite3.cmake
@@ -12,7 +12,5 @@ IF(SQLITE3_FOUND)
 	MESSAGE(STATUS "Found system sqlite3 header file in ${SQLITE3_INCLUDE_DIR}")
 	MESSAGE(STATUS "Found system sqlite3 library ${SQLITE3_LIBRARY}")
 ELSE(SQLITE3_FOUND)
-	SET(SQLITE3_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/sqlite)
-	SET(SQLITE3_LIBRARY sqlite3)
-	MESSAGE(STATUS "Using project sqlite3 library")
+    MESSAGE(FATAL_ERROR "SQLite NOT found")
 ENDIF(SQLITE3_FOUND)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 74c5fab..b275795 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -192,10 +192,7 @@ message (STATUS "LuaJIT headers: ${LUA_INCLUDE_DIR}")
 if(LUA_LIBRARY AND LUA_INCLUDE_DIR) 
 	message (STATUS "LuaJIT found.")
 else(LUA_LIBRARY AND LUA_INCLUDE_DIR)
-	message (STATUS "LuaJIT not found, using bundled Lua.")
-	set(LUA_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/lua/src")
-	set(LUA_LIBRARY "lua")
-	add_subdirectory(lua)
+    message (FATAL_ERROR "LuaJIT NOT found.")
 endif(LUA_LIBRARY AND LUA_INCLUDE_DIR)
 
 mark_as_advanced(LUA_LIBRARY)
-- 
1.8.1.5

